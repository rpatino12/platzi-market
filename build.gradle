plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.5'
	id 'io.spring.dependency-management' version '1.1.0'
}

group = 'com.platzi'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	// This framework adds security to our API, with default user: user and a generated password everytime we run the app
	implementation 'org.springframework.boot:spring-boot-starter-security'
	// We use the keyword runtimeOnly for this dependency because we only need it in runtime
	runtimeOnly 'org.postgresql:postgresql'
	// Let's import the mapstruct library to our project, to implement the data mapper
	implementation 'org.mapstruct:mapstruct:1.5.3.Final'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.3.Final'

	// Let's add the dependency to create JSON Web Tokens (JWT)
	// https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt-api
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-gson:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'

	// To document our API with Swagger2, so our API will be easier to use and understand and will be more professional
	implementation 'io.springfox:springfox-swagger2:3.0.0'
	// This dependency will create an html of Swagger, where we can see our API endpoints
	// (https://localhost:8090/platzi-market/api/swagger-ui.html)
	implementation 'io.springfox:springfox-swagger-ui:3.0.0'


	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
	useJUnitPlatform()
}
